const mongoose = require('mongoose');

// Connect to MongoDB
async function connectDB() {
  try {
    await mongoose.connect(process.env.MONGODB_URI || 'mongodb://localhost:27017/ccit');
    console.log('Connected to MongoDB');
  } catch (error) {
    console.error('MongoDB connection error:', error);
    process.exit(1);
  }
}

// Course schema
const CourseSchema = new mongoose.Schema({
  title: { type: String, required: true },
  description: { type: String, required: true },
  shortDescription: { type: String, maxlength: 500 },
  coverPhoto: { type: String },
  courseType: { type: String, enum: ['online', 'offline', 'both'], required: true },
  regularPrice: { type: Number, required: true },
  discountPrice: { type: Number },
  discountPercentage: { type: Number },
  mentors: [{ type: mongoose.Schema.Types.ObjectId, ref: 'Mentor' }],
  modules: [{
    title: { type: String, required: true },
    description: { type: String, required: true },
    duration: { type: Number, required: true },
    order: { type: Number, required: true }
  }],
  whatYouWillLearn: [{ type: String }],
  requirements: [{ type: String }],
  features: [{ type: String }],
  duration: { type: Number, required: true },
  durationUnit: { type: String, enum: ['days', 'weeks', 'months', 'years'], required: true },
  maxStudents: { type: Number, default: 30 },
  marketing: {
    slug: { type: String, required: true },
    metaDescription: { type: String },
    tags: [{ type: String }]
  },
  category: { type: String, required: true },
  level: { type: String, required: true },
  language: { type: String, required: true },
  courseCode: { type: String, required: true },
  courseShortcut: { type: String, required: true },
  status: { type: String, enum: ['draft', 'published', 'archived'], default: 'draft' },
  isActive: { type: Boolean, default: true },
  createdBy: { type: String, required: true }
}, { timestamps: true });

// Batch schema
const BatchSchema = new mongoose.Schema({
  courseId: { type: mongoose.Schema.Types.ObjectId, ref: 'Course', required: true },
  batchCode: { type: String, required: true, unique: true, uppercase: true },
  name: { type: String, required: true },
  description: { type: String },
  courseType: { type: String, enum: ['online', 'offline'], required: true },
  mentorId: { type: mongoose.Schema.Types.ObjectId, ref: 'Mentor', required: true },
  additionalMentors: [{ type: mongoose.Schema.Types.ObjectId, ref: 'Mentor' }],
  startDate: { type: Date, required: true },
  endDate: { type: Date, required: true },
  maxStudents: { type: Number, required: true },
  currentStudents: { type: Number, default: 0 },
  regularPrice: { type: Number, min: 0 },
  discountPrice: { type: Number, min: 0 },
  discountPercentage: { type: Number, min: 0, max: 100 },
  status: { type: String, enum: ['draft', 'published', 'upcoming', 'ongoing', 'completed', 'cancelled'], default: 'draft' },
  isActive: { type: Boolean, default: true },
  createdBy: { type: String, required: true }
}, { timestamps: true });

// Mentor schema
const MentorSchema = new mongoose.Schema({
  name: { type: String, required: true },
  email: { type: String, required: true, unique: true },
  avatar: { type: String },
  designation: { type: String, required: true },
  experience: { type: Number, required: true },
  expertise: [{ type: String }],
  bio: { type: String },
  rating: { type: Number, min: 0, max: 5 },
  isActive: { type: Boolean, default: true },
  createdBy: { type: String, required: true }
}, { timestamps: true });

const Course = mongoose.models.Course || mongoose.model('Course', CourseSchema);
const Batch = mongoose.models.Batch || mongoose.model('Batch', BatchSchema);
const Mentor = mongoose.models.Mentor || mongoose.model('Mentor', MentorSchema);

// Create sample data
async function createSampleData() {
  try {
    await connectDB();

    console.log('üöÄ Creating sample data...\n');

    // Create a mentor first
    console.log('üë®‚Äçüè´ Creating mentor...');
    const mentor = new Mentor({
      name: '‡¶Æ‡ßã‡¶É ‡¶á‡¶ï‡¶¨‡¶æ‡¶≤ ‡¶π‡ßã‡¶∏‡ßá‡¶®',
      email: 'ikbal@example.com',
      designation: 'Senior Graphic Designer',
      experience: 5,
      expertise: ['Adobe Illustrator', 'Photoshop', 'Graphic Design'],
      bio: '‡¶§‡¶ø‡¶®‡¶ø ‡¶è‡¶ï‡¶ú‡¶® ‡¶Ö‡¶≠‡¶ø‡¶ú‡ßç‡¶û ‡¶ó‡ßç‡¶∞‡¶æ‡¶´‡¶ø‡¶ï ‡¶°‡¶ø‡¶ú‡¶æ‡¶á‡¶®‡¶æ‡¶∞ ‡¶è‡¶¨‡¶Ç ‡¶ü‡ßç‡¶∞‡ßá‡¶á‡¶®‡¶æ‡¶∞',
      rating: 4.8,
      createdBy: 'admin'
    });

    await mentor.save();
    console.log(`‚úÖ Mentor created: ${mentor.name}`);

    // Create a course
    console.log('\nüìö Creating course...');
    const course = new Course({
      title: 'Graphics Design with Illustrator',
      description: '‡¶è‡¶ü‡¶ø ‡¶è‡¶ï‡¶ü‡¶ø ‡¶∏‡¶Æ‡ßç‡¶™‡ßÇ‡¶∞‡ßç‡¶£ ‡¶ó‡ßç‡¶∞‡¶æ‡¶´‡¶ø‡¶ï ‡¶°‡¶ø‡¶ú‡¶æ‡¶á‡¶® ‡¶ï‡ßã‡¶∞‡ßç‡¶∏ ‡¶Ø‡ßá‡¶ñ‡¶æ‡¶®‡ßá ‡¶Ü‡¶™‡¶®‡¶ø Adobe Illustrator ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßá ‡¶™‡ßç‡¶∞‡¶´‡ßá‡¶∂‡¶®‡¶æ‡¶≤ ‡¶ó‡ßç‡¶∞‡¶æ‡¶´‡¶ø‡¶ï ‡¶°‡¶ø‡¶ú‡¶æ‡¶á‡¶® ‡¶∂‡¶ø‡¶ñ‡¶¨‡ßá‡¶®‡•§',
      shortDescription: 'Adobe Illustrator ‡¶¶‡¶ø‡¶Ø‡¶º‡ßá ‡¶™‡ßç‡¶∞‡¶´‡ßá‡¶∂‡¶®‡¶æ‡¶≤ ‡¶ó‡ßç‡¶∞‡¶æ‡¶´‡¶ø‡¶ï ‡¶°‡¶ø‡¶ú‡¶æ‡¶á‡¶® ‡¶∂‡¶ø‡¶ñ‡ßÅ‡¶®',
      courseType: 'both',
      regularPrice: 50000,
      discountPrice: 40000,
      discountPercentage: 20,
      mentors: [mentor._id],
      modules: [
        {
          title: 'Introduction to Illustrator',
          description: 'Adobe Illustrator ‡¶è‡¶∞ ‡¶¨‡ßá‡¶∏‡¶ø‡¶ï ‡¶™‡¶∞‡¶ø‡¶ö‡¶ø‡¶§‡¶ø',
          duration: 2,
          order: 1
        },
        {
          title: 'Basic Tools and Techniques',
          description: '‡¶Æ‡ßÇ‡¶≤ ‡¶ü‡ßÅ‡¶≤‡¶∏ ‡¶è‡¶¨‡¶Ç ‡¶ï‡ßå‡¶∂‡¶≤ ‡¶∂‡ßá‡¶ñ‡¶æ',
          duration: 4,
          order: 2
        },
        {
          title: 'Advanced Design Projects',
          description: '‡¶è‡¶°‡¶≠‡¶æ‡¶®‡ßç‡¶∏‡¶° ‡¶°‡¶ø‡¶ú‡¶æ‡¶á‡¶® ‡¶™‡ßç‡¶∞‡¶ú‡ßá‡¶ï‡ßç‡¶ü',
          duration: 6,
          order: 3
        }
      ],
      whatYouWillLearn: [
        'Adobe Illustrator ‡¶è‡¶∞ ‡¶∏‡¶Æ‡ßç‡¶™‡ßÇ‡¶∞‡ßç‡¶£ ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞',
        '‡¶™‡ßç‡¶∞‡¶´‡ßá‡¶∂‡¶®‡¶æ‡¶≤ ‡¶≤‡ßã‡¶ó‡ßã ‡¶°‡¶ø‡¶ú‡¶æ‡¶á‡¶®',
        '‡¶¨‡ßç‡¶∞‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶ø‡¶Ç ‡¶è‡¶¨‡¶Ç ‡¶Æ‡¶æ‡¶∞‡ßç‡¶ï‡ßá‡¶ü‡¶ø‡¶Ç ‡¶Æ‡ßç‡¶Ø‡¶æ‡¶ü‡ßá‡¶∞‡¶ø‡¶Ø‡¶º‡¶æ‡¶≤',
        '‡¶™‡ßç‡¶∞‡¶ø‡¶®‡ßç‡¶ü ‡¶°‡¶ø‡¶ú‡¶æ‡¶á‡¶® ‡¶è‡¶¨‡¶Ç ‡¶°‡¶ø‡¶ú‡¶ø‡¶ü‡¶æ‡¶≤ ‡¶Ü‡¶∞‡ßç‡¶ü'
      ],
      requirements: [
        '‡¶¨‡ßá‡¶∏‡¶ø‡¶ï ‡¶ï‡¶Æ‡ßç‡¶™‡¶ø‡¶â‡¶ü‡¶æ‡¶∞ ‡¶ú‡ßç‡¶û‡¶æ‡¶®',
        'Adobe Illustrator ‡¶∏‡¶´‡¶ü‡¶ì‡¶Ø‡¶º‡ßç‡¶Ø‡¶æ‡¶∞',
        '‡¶∏‡ßÉ‡¶ú‡¶®‡¶∂‡ßÄ‡¶≤ ‡¶ö‡¶ø‡¶®‡ßç‡¶§‡¶æ‡¶≠‡¶æ‡¶¨‡¶®‡¶æ'
      ],
      features: [
        '‡¶≤‡¶æ‡¶á‡¶≠ ‡¶ï‡ßç‡¶≤‡¶æ‡¶∏',
        '‡¶∞‡ßá‡¶ï‡¶∞‡ßç‡¶°‡ßá‡¶° ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì',
        '‡¶™‡ßç‡¶∞‡¶ú‡ßá‡¶ï‡ßç‡¶ü ‡¶¨‡ßá‡¶∏‡¶° ‡¶≤‡¶æ‡¶∞‡ßç‡¶®‡¶ø‡¶Ç',
        '‡¶∏‡¶æ‡¶∞‡ßç‡¶ü‡¶ø‡¶´‡¶ø‡¶ï‡ßá‡¶ü'
      ],
      duration: 3,
      durationUnit: 'months',
      maxStudents: 30,
      marketing: {
        slug: 'graphics-design-with-illustrator',
        metaDescription: 'Adobe Illustrator ‡¶¶‡¶ø‡¶Ø‡¶º‡ßá ‡¶™‡ßç‡¶∞‡¶´‡ßá‡¶∂‡¶®‡¶æ‡¶≤ ‡¶ó‡ßç‡¶∞‡¶æ‡¶´‡¶ø‡¶ï ‡¶°‡¶ø‡¶ú‡¶æ‡¶á‡¶® ‡¶∂‡¶ø‡¶ñ‡ßÅ‡¶®',
        tags: ['graphics', 'illustrator', 'design', 'adobe']
      },
      category: 'design',
      level: 'beginner',
      language: 'bengali',
      courseCode: 'GDI',
      courseShortcut: 'Graphics Design with Illustrator',
      status: 'published',
      isActive: true,
      createdBy: 'admin'
    });

    await course.save();
    console.log(`‚úÖ Course created: ${course.title}`);

    // Create a batch
    console.log('\nüéØ Creating batch...');
    const batch = new Batch({
      courseId: course._id,
      batchCode: 'GDI2501',
      name: 'Graphics Design with Illustrator Batch-01',
      description: '‡¶è‡¶ü‡¶ø Graphics Design with Illustrator ‡¶ï‡ßã‡¶∞‡ßç‡¶∏‡ßá‡¶∞ ‡¶™‡ßç‡¶∞‡¶•‡¶Æ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ö',
      courseType: 'online',
      mentorId: mentor._id,
      startDate: new Date('2025-02-01'),
      endDate: new Date('2025-05-01'),
      maxStudents: 25,
      currentStudents: 0,
      regularPrice: 60000, // Batch-specific pricing
      discountPrice: 45000,
      discountPercentage: 25,
      status: 'published',
      isActive: true,
      createdBy: 'admin'
    });

    await batch.save();
    console.log(`‚úÖ Batch created: ${batch.name}`);

    // Create another batch
    console.log('\nüéØ Creating second batch...');
    const batch2 = new Batch({
      courseId: course._id,
      batchCode: 'GDI2502',
      name: 'Graphics Design with Illustrator Batch-02',
      description: '‡¶è‡¶ü‡¶ø Graphics Design with Illustrator ‡¶ï‡ßã‡¶∞‡ßç‡¶∏‡ßá‡¶∞ ‡¶¶‡ßç‡¶¨‡¶ø‡¶§‡ßÄ‡¶Ø‡¶º ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ö',
      courseType: 'online',
      mentorId: mentor._id,
      startDate: new Date('2025-03-01'),
      endDate: new Date('2025-06-01'),
      maxStudents: 30,
      currentStudents: 5,
      regularPrice: 55000, // Different batch pricing
      discountPrice: 40000,
      discountPercentage: 27,
      status: 'upcoming',
      isActive: true,
      createdBy: 'admin'
    });

    await batch2.save();
    console.log(`‚úÖ Second batch created: ${batch2.name}`);

    // Create another course and batch
    console.log('\nüìö Creating second course...');
    const course2 = new Course({
      title: 'MERN Stack Development',
      description: '‡¶è‡¶ü‡¶ø ‡¶è‡¶ï‡¶ü‡¶ø ‡¶∏‡¶Æ‡ßç‡¶™‡ßÇ‡¶∞‡ßç‡¶£ MERN Stack Development ‡¶ï‡ßã‡¶∞‡ßç‡¶∏ ‡¶Ø‡ßá‡¶ñ‡¶æ‡¶®‡ßá ‡¶Ü‡¶™‡¶®‡¶ø MongoDB, Express.js, React, ‡¶è‡¶¨‡¶Ç Node.js ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßá ‡¶´‡ßÅ‡¶≤-‡¶∏‡ßç‡¶ü‡ßç‡¶Ø‡¶æ‡¶ï ‡¶ì‡¶Ø‡¶º‡ßá‡¶¨ ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶™‡ßç‡¶≤‡¶ø‡¶ï‡ßá‡¶∂‡¶® ‡¶§‡ßà‡¶∞‡¶ø ‡¶∂‡¶ø‡¶ñ‡¶¨‡ßá‡¶®‡•§',
      shortDescription: 'MongoDB, Express.js, React, Node.js ‡¶¶‡¶ø‡¶Ø‡¶º‡ßá ‡¶´‡ßÅ‡¶≤-‡¶∏‡ßç‡¶ü‡ßç‡¶Ø‡¶æ‡¶ï ‡¶°‡ßá‡¶≠‡ßá‡¶≤‡¶™‡¶Æ‡ßá‡¶®‡ßç‡¶ü ‡¶∂‡¶ø‡¶ñ‡ßÅ‡¶®',
      courseType: 'both',
      regularPrice: 80000,
      discountPrice: 60000,
      discountPercentage: 25,
      mentors: [mentor._id],
      modules: [
        {
          title: 'JavaScript Fundamentals',
          description: '‡¶ú‡¶æ‡¶≠‡¶æ‡¶∏‡ßç‡¶ï‡ßç‡¶∞‡¶ø‡¶™‡ßç‡¶ü‡ßá‡¶∞ ‡¶¨‡ßá‡¶∏‡¶ø‡¶ï ‡¶ï‡¶®‡¶∏‡ßá‡¶™‡ßç‡¶ü',
          duration: 3,
          order: 1
        },
        {
          title: 'React Development',
          description: 'React ‡¶¶‡¶ø‡¶Ø‡¶º‡ßá ‡¶´‡ßç‡¶∞‡¶®‡ßç‡¶ü‡¶è‡¶®‡ßç‡¶° ‡¶°‡ßá‡¶≠‡ßá‡¶≤‡¶™‡¶Æ‡ßá‡¶®‡ßç‡¶ü',
          duration: 5,
          order: 2
        },
        {
          title: 'Node.js and Express',
          description: '‡¶¨‡ßç‡¶Ø‡¶æ‡¶ï‡¶è‡¶®‡ßç‡¶° ‡¶°‡ßá‡¶≠‡ßá‡¶≤‡¶™‡¶Æ‡ßá‡¶®‡ßç‡¶ü',
          duration: 4,
          order: 3
        },
        {
          title: 'MongoDB Database',
          description: '‡¶°‡ßá‡¶ü‡¶æ‡¶¨‡ßá‡¶∏ ‡¶°‡¶ø‡¶ú‡¶æ‡¶á‡¶® ‡¶è‡¶¨‡¶Ç ‡¶Æ‡ßç‡¶Ø‡¶æ‡¶®‡ßá‡¶ú‡¶Æ‡ßá‡¶®‡ßç‡¶ü',
          duration: 3,
          order: 4
        }
      ],
      whatYouWillLearn: [
        'MERN Stack ‡¶è‡¶∞ ‡¶∏‡¶Æ‡ßç‡¶™‡ßÇ‡¶∞‡ßç‡¶£ ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞',
        '‡¶´‡ßÅ‡¶≤-‡¶∏‡ßç‡¶ü‡ßç‡¶Ø‡¶æ‡¶ï ‡¶ì‡¶Ø‡¶º‡ßá‡¶¨ ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶™‡ßç‡¶≤‡¶ø‡¶ï‡ßá‡¶∂‡¶® ‡¶§‡ßà‡¶∞‡¶ø',
        '‡¶°‡ßá‡¶ü‡¶æ‡¶¨‡ßá‡¶∏ ‡¶°‡¶ø‡¶ú‡¶æ‡¶á‡¶® ‡¶è‡¶¨‡¶Ç API ‡¶°‡ßá‡¶≠‡ßá‡¶≤‡¶™‡¶Æ‡ßá‡¶®‡ßç‡¶ü',
        '‡¶°‡ßá‡¶™‡ßç‡¶≤‡¶Ø‡¶º‡¶Æ‡ßá‡¶®‡ßç‡¶ü ‡¶è‡¶¨‡¶Ç ‡¶π‡ßã‡¶∏‡ßç‡¶ü‡¶ø‡¶Ç'
      ],
      requirements: [
        '‡¶¨‡ßá‡¶∏‡¶ø‡¶ï ‡¶™‡ßç‡¶∞‡ßã‡¶ó‡ßç‡¶∞‡¶æ‡¶Æ‡¶ø‡¶Ç ‡¶ú‡ßç‡¶û‡¶æ‡¶®',
        'HTML, CSS ‡¶ú‡ßç‡¶û‡¶æ‡¶®',
        '‡¶ï‡¶Æ‡ßç‡¶™‡¶ø‡¶â‡¶ü‡¶æ‡¶∞ ‡¶è‡¶¨‡¶Ç ‡¶á‡¶®‡ßç‡¶ü‡¶æ‡¶∞‡¶®‡ßá‡¶ü'
      ],
      features: [
        '‡¶™‡ßç‡¶∞‡¶ú‡ßá‡¶ï‡ßç‡¶ü ‡¶¨‡ßá‡¶∏‡¶° ‡¶≤‡¶æ‡¶∞‡ßç‡¶®‡¶ø‡¶Ç',
        '‡¶≤‡¶æ‡¶á‡¶≠ ‡¶ï‡ßã‡¶°‡¶ø‡¶Ç ‡¶∏‡ßá‡¶∂‡¶®',
        '‡¶ó‡¶ø‡¶ü ‡¶è‡¶¨‡¶Ç ‡¶ó‡¶ø‡¶ü‡¶π‡¶æ‡¶¨ ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞',
        '‡¶ú‡¶¨ ‡¶™‡ßç‡¶≤‡ßá‡¶∏‡¶Æ‡ßá‡¶®‡ßç‡¶ü ‡¶∏‡¶æ‡¶™‡ßã‡¶∞‡ßç‡¶ü'
      ],
      duration: 4,
      durationUnit: 'months',
      maxStudents: 20,
      marketing: {
        slug: 'mern-stack-development',
        metaDescription: 'MongoDB, Express.js, React, Node.js ‡¶¶‡¶ø‡¶Ø‡¶º‡ßá ‡¶´‡ßÅ‡¶≤-‡¶∏‡ßç‡¶ü‡ßç‡¶Ø‡¶æ‡¶ï ‡¶°‡ßá‡¶≠‡ßá‡¶≤‡¶™‡¶Æ‡ßá‡¶®‡ßç‡¶ü ‡¶∂‡¶ø‡¶ñ‡ßÅ‡¶®',
        tags: ['mern', 'javascript', 'react', 'nodejs', 'mongodb']
      },
      category: 'web-development',
      level: 'intermediate',
      language: 'bengali',
      courseCode: 'MSD',
      courseShortcut: 'MERN Stack Development',
      status: 'published',
      isActive: true,
      createdBy: 'admin'
    });

    await course2.save();
    console.log(`‚úÖ Second course created: ${course2.title}`);

    // Create batch for second course
    console.log('\nüéØ Creating batch for second course...');
    const batch3 = new Batch({
      courseId: course2._id,
      batchCode: 'MSD2501',
      name: 'MERN Stack Development Batch-01',
      description: '‡¶è‡¶ü‡¶ø MERN Stack Development ‡¶ï‡ßã‡¶∞‡ßç‡¶∏‡ßá‡¶∞ ‡¶™‡ßç‡¶∞‡¶•‡¶Æ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ö',
      courseType: 'online',
      mentorId: mentor._id,
      startDate: new Date('2025-02-15'),
      endDate: new Date('2025-06-15'),
      maxStudents: 20,
      currentStudents: 3,
      regularPrice: 85000, // Batch-specific pricing
      discountPrice: 65000,
      discountPercentage: 24,
      status: 'published',
      isActive: true,
      createdBy: 'admin'
    });

    await batch3.save();
    console.log(`‚úÖ Third batch created: ${batch3.name}`);

    console.log('\nüéâ Sample data created successfully!');
    console.log('\nüìä Summary:');
    console.log(`‚Ä¢ 1 Mentor: ${mentor.name}`);
    console.log(`‚Ä¢ 2 Courses: ${course.title}, ${course2.title}`);
    console.log(`‚Ä¢ 3 Batches: ${batch.name}, ${batch2.name}, ${batch3.name}`);

  } catch (error) {
    console.error('Error creating sample data:', error);
  } finally {
    await mongoose.disconnect();
    console.log('\nüîå Disconnected from MongoDB');
  }
}

createSampleData();
